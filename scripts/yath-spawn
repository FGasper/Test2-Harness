#!/usr/bin/env perl
package main;
use strict;
use warnings;

use Test2::Harness::Run::Runner;

my ($dir) = @ARGV;

my $spawn = Test2::Harness::Run::Runner->new(
    dir => $dir,
);

$SIG{HUP} = sub {
    print STDERR <<"    EOT";
Got SIGHUP, adding a respawn action to the queue...
This will cause the runner to restart as soon as it finishes processing any
items that were already in the queue. New items that get queued will be run
after the respawn.
    EOT
    $spawn->respawn;
};

my $test_file = $spawn->start;

# Do not keep the signal handler post-fork when we are running a test file.
$SIG{HUP} = 'DEFAULT';

unless($test_file) {
    my $complete = File::Spec->catfile($dir, 'complete');
    open(my $fh, '>', $complete) or die "Could not open '$complete'";
    print $fh '1';
    close($fh);
    exit 0;
}

$@ = '';
do $test_file;
die $@ if $@;

exit 0;
